{"version":3,"sources":["Spinner.js","Images.js","Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["className","icon","faBowlingBall","size","color","props","images","map","image","i","onClick","removeImage","public_id","faTimesCircle","src","secure_url","alt","htmlFor","faImage","type","id","onChange","faImages","multiple","App","state","uploading","e","files","Array","from","target","setState","formData","FormData","forEach","file","append","filter","this","Spinner","length","Images","Buttons","content","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAIe,oBACX,qBAAKA,UAAU,iBAAf,SACI,cAAC,IAAD,CAAiBC,KAAMC,IAAeC,KAAK,KAAKC,MAAM,eCF/C,WAAAC,GAAK,OAChBA,EAAMC,OAAOC,KAAI,SAACC,EAAOC,GAAR,OACb,sBAAaT,UAAU,SAAvB,UACI,qBACIU,QAAS,kBAAML,EAAMM,YAAYH,EAAMI,YACvCZ,UAAU,SAFd,SAII,cAAC,IAAD,CAAiBC,KAAMY,IAAeV,KAAK,SAE/C,qBAAKW,IAAKN,EAAMO,WAAYC,IAAI,OAP1BP,OCFH,WAAAJ,GAAK,OAChB,sBAAKL,UAAU,iBAAf,UACI,sBAAKA,UAAU,SAAf,UACI,uBAAOiB,QAAQ,SAAf,SACI,cAAC,IAAD,CAAiBhB,KAAMiB,IAASd,MAAM,UAAUD,KAAK,UAEzD,uBAAOgB,KAAK,OAAOC,GAAG,SAASC,SAAUhB,EAAMgB,cAGnD,sBAAKrB,UAAU,SAAf,UACI,uBAAOiB,QAAQ,QAAf,SACI,cAAC,IAAD,CAAiBhB,KAAMqB,IAAUlB,MAAM,UAAUD,KAAK,UAE1D,uBAAOgB,KAAK,OAAOC,GAAG,QAAQC,SAAUhB,EAAMgB,SAAUE,UAAQ,WCVvDC,G,kNAEnBC,MAAQ,CACNC,WAAW,EACXpB,OAAQ,I,EAGVe,SAAW,SAAAM,GACT,IAAMC,EAAQC,MAAMC,KAAKH,EAAEI,OAAOH,OAClC,EAAKI,SAAS,CAAEN,WAAW,IAE3B,IAAMO,EAAW,IAAIC,SAErBN,EAAMO,SAAQ,SAACC,EAAM3B,GACnBwB,EAASI,OAAO5B,EAAG2B,O,EAiBvBzB,YAAc,SAAAS,GACZ,EAAKY,SAAS,CACZ1B,OAAQ,EAAKmB,MAAMnB,OAAOgC,QAAO,SAAA9B,GAAK,OAAIA,EAAMI,YAAcQ,Q,uDAIxD,IAAD,SACuBmB,KAAKd,MAA3BC,EADD,EACCA,UAAWpB,EADZ,EACYA,OAanB,OACE,8BACE,qBAAKN,UAAU,UAAf,SAbY,WACd,QAAQ,GACN,KAAK0B,EACH,OAAO,cAACc,EAAD,IACT,KAAKlC,EAAOmC,OAAS,EACnB,OAAO,cAACC,EAAD,CAAQpC,OAAQA,EAAQK,YAAa,EAAKA,cACnD,QACE,OAAO,cAACgC,EAAD,CAAStB,SAAU,EAAKA,YAO9BuB,W,GAtDsBC,cCKlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ab38c46d.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBowlingBall } from '@fortawesome/free-solid-svg-icons'\n\nexport default () =>\n    <div className='spinner fadein'>\n        <FontAwesomeIcon icon={faBowlingBall} size='5x' color='#3B5998' />\n    </div>","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport default props =>\n    props.images.map((image, i) =>\n        <div key={i} className='fadein'>\n            <div\n                onClick={() => props.removeImage(image.public_id)}\n                className='delete'\n            >\n                <FontAwesomeIcon icon={faTimesCircle} size='2x' />\n            </div>\n            <img src={image.secure_url} alt='' />\n        </div>\n    )\n\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImages, faImage } from '@fortawesome/free-solid-svg-icons'\n\nexport default props =>\n    <div className='buttons fadein'>\n        <div className='button'>\n            <label htmlFor='single'>\n                <FontAwesomeIcon icon={faImage} color='#3B5998' size='10x' />\n            </label>\n            <input type='file' id='single' onChange={props.onChange} />\n        </div>\n\n        <div className='button'>\n            <label htmlFor='multi'>\n                <FontAwesomeIcon icon={faImages} color='#6d84b4' size='10x' />\n            </label>\n            <input type='file' id='multi' onChange={props.onChange} multiple />\n        </div>\n    </div>","import React, { Component } from 'react'\nimport Spinner from './Spinner'\nimport Images from './Images'\nimport Buttons from './Buttons'\n// import { API_URL } from './config'\nimport './App.css'\n\nexport default class App extends Component {\n\n  state = {\n    uploading: false,\n    images: []\n  }\n\n  onChange = e => {\n    const files = Array.from(e.target.files)\n    this.setState({ uploading: true })\n\n    const formData = new FormData()\n\n    files.forEach((file, i) => {\n      formData.append(i, file)\n    })\n\n    // fetch(`${API_URL}/image-upload`, {\n    //   method: 'POST',\n    //   body: formData\n    // })\n    //   .then(res => res.json())\n    //   .then(images => {\n    //     this.setState({\n    //       uploading: false,\n    //       images\n    //     })\n    //   })\n    \n  }\n\n  removeImage = id => {\n    this.setState({\n      images: this.state.images.filter(image => image.public_id !== id)\n    })\n  }\n\n  render() {\n    const { uploading, images } = this.state\n\n    const content = () => {\n      switch (true) {\n        case uploading:\n          return <Spinner />\n        case images.length > 0:\n          return <Images images={images} removeImage={this.removeImage} />\n        default:\n          return <Buttons onChange={this.onChange} />\n      }\n    }\n\n    return (\n      <div>\n        <div className='buttons'>\n          {content()}\n        </div>\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}